"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@auth+mongodb-adapter@2.6.0_mongodb@6.9.0_socks@2.8.3_";
exports.ids = ["vendor-chunks/@auth+mongodb-adapter@2.6.0_mongodb@6.9.0_socks@2.8.3_"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@auth+mongodb-adapter@2.6.0_mongodb@6.9.0_socks@2.8.3_/node_modules/@auth/mongodb-adapter/index.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@auth+mongodb-adapter@2.6.0_mongodb@6.9.0_socks@2.8.3_/node_modules/@auth/mongodb-adapter/index.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MongoDBAdapter: () => (/* binding */ MongoDBAdapter),\n/* harmony export */   _id: () => (/* binding */ _id),\n/* harmony export */   defaultCollections: () => (/* binding */ defaultCollections),\n/* harmony export */   format: () => (/* binding */ format)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/**\n * <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", padding: 16}}>\n *  <p style={{fontWeight: \"normal\"}}>Official <a href=\"https://www.mongodb.com\">MongoDB</a> adapter for Auth.js / NextAuth.js.</p>\n *  <a href=\"https://www.mongodb.com\">\n *   <img style={{display: \"block\"}} src=\"https://authjs.dev/img/adapters/mongodb.svg\" width=\"30\" />\n *  </a>\n * </div>\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install @auth/mongodb-adapter mongodb\n * ```\n *\n * @module @auth/mongodb-adapter\n */ \nconst defaultCollections = {\n    Users: \"users\",\n    Accounts: \"accounts\",\n    Sessions: \"sessions\",\n    VerificationTokens: \"verification_tokens\"\n};\nconst format = {\n    /** Takes a mongoDB object and returns a plain old JavaScript object */ from (object) {\n        const newObject = {};\n        for(const key in object){\n            const value = object[key];\n            if (key === \"_id\") {\n                newObject.id = value.toHexString();\n            } else if (key === \"userId\") {\n                newObject[key] = value.toHexString();\n            } else {\n                newObject[key] = value;\n            }\n        }\n        return newObject;\n    },\n    /** Takes a plain old JavaScript object and turns it into a mongoDB object */ to (object) {\n        const newObject = {\n            _id: _id(object.id)\n        };\n        for(const key in object){\n            const value = object[key];\n            if (key === \"userId\") newObject[key] = _id(value);\n            else if (key === \"id\") continue;\n            else newObject[key] = value;\n        }\n        return newObject;\n    }\n};\n/** @internal */ function _id(hex) {\n    if (hex?.length !== 24) return new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId();\n    return new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(hex);\n}\n/**\n * ## Setup\n *\n * The MongoDB adapter does not handle connections automatically, so you will have to make sure that you pass the Adapter a `MongoClient` that is connected already. Below you can see an example how to do this.\n *\n * ### Add the MongoDB client\n *\n * ```ts\n * // This approach is taken from https://github.com/vercel/next.js/tree/canary/examples/with-mongodb\n * import { MongoClient } from \"mongodb\"\n *\n * if (!process.env.MONGODB_URI) {\n *   throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"')\n * }\n *\n * const uri = process.env.MONGODB_URI\n * const options = {}\n *\n * let client\n * let clientPromise: Promise<MongoClient>\n *\n * if (process.env.NODE_ENV === \"development\") {\n *   // In development mode, use a global variable so that the value\n *   // is preserved across module reloads caused by HMR (Hot Module Replacement).\n *   if (!global._mongoClientPromise) {\n *     client = new MongoClient(uri, options)\n *     global._mongoClientPromise = client.connect()\n *   }\n *   clientPromise = global._mongoClientPromise\n * } else {\n *   // In production mode, it's best to not use a global variable.\n *   client = new MongoClient(uri, options)\n *   clientPromise = client.connect()\n * }\n *\n * // Export a module-scoped MongoClient promise. By doing this in a\n * // separate module, the client can be shared across functions.\n * export default clientPromise\n * ```\n *\n * ### Configure Auth.js\n *\n * ```js\n * import NextAuth from \"next-auth\"\n * import { MongoDBAdapter } from \"@auth/mongodb-adapter\"\n * import clientPromise from \"../../../lib/mongodb\"\n *\n * // For more information on each option (and a full list of options) go to\n * // https://authjs.dev/reference/providers/oauth\n * export default NextAuth({\n *   adapter: MongoDBAdapter(clientPromise),\n *   ...\n * })\n * ```\n **/ function MongoDBAdapter(client, options = {}) {\n    const { collections } = options;\n    const { from, to } = format;\n    const db = (async ()=>{\n        const _db = (await client).db(options.databaseName);\n        const c = {\n            ...defaultCollections,\n            ...collections\n        };\n        return {\n            U: _db.collection(c.Users),\n            A: _db.collection(c.Accounts),\n            S: _db.collection(c.Sessions),\n            V: _db.collection(c?.VerificationTokens)\n        };\n    })();\n    return {\n        async createUser (data) {\n            const user = to(data);\n            await (await db).U.insertOne(user);\n            return from(user);\n        },\n        async getUser (id) {\n            const user = await (await db).U.findOne({\n                _id: _id(id)\n            });\n            if (!user) return null;\n            return from(user);\n        },\n        async getUserByEmail (email) {\n            const user = await (await db).U.findOne({\n                email\n            });\n            if (!user) return null;\n            return from(user);\n        },\n        async getUserByAccount (provider_providerAccountId) {\n            const account = await (await db).A.findOne(provider_providerAccountId);\n            if (!account) return null;\n            const user = await (await db).U.findOne({\n                _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(account.userId)\n            });\n            if (!user) return null;\n            return from(user);\n        },\n        async updateUser (data) {\n            const { _id, ...user } = to(data);\n            const result = await (await db).U.findOneAndUpdate({\n                _id\n            }, {\n                $set: user\n            }, {\n                returnDocument: \"after\"\n            });\n            return from(result);\n        },\n        async deleteUser (id) {\n            const userId = _id(id);\n            const m = await db;\n            await Promise.all([\n                m.A.deleteMany({\n                    userId: userId\n                }),\n                m.S.deleteMany({\n                    userId: userId\n                }),\n                m.U.deleteOne({\n                    _id: userId\n                })\n            ]);\n        },\n        linkAccount: async (data)=>{\n            const account = to(data);\n            await (await db).A.insertOne(account);\n            return account;\n        },\n        async unlinkAccount (provider_providerAccountId) {\n            const account = await (await db).A.findOneAndDelete(provider_providerAccountId);\n            return from(account);\n        },\n        async getSessionAndUser (sessionToken) {\n            const session = await (await db).S.findOne({\n                sessionToken\n            });\n            if (!session) return null;\n            const user = await (await db).U.findOne({\n                _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(session.userId)\n            });\n            if (!user) return null;\n            return {\n                user: from(user),\n                session: from(session)\n            };\n        },\n        async createSession (data) {\n            const session = to(data);\n            await (await db).S.insertOne(session);\n            return from(session);\n        },\n        async updateSession (data) {\n            const { _id, ...session } = to(data);\n            const updatedSession = await (await db).S.findOneAndUpdate({\n                sessionToken: session.sessionToken\n            }, {\n                $set: session\n            }, {\n                returnDocument: \"after\"\n            });\n            return from(updatedSession);\n        },\n        async deleteSession (sessionToken) {\n            const session = await (await db).S.findOneAndDelete({\n                sessionToken\n            });\n            return from(session);\n        },\n        async createVerificationToken (data) {\n            await (await db).V.insertOne(to(data));\n            return data;\n        },\n        async useVerificationToken (identifier_token) {\n            const verificationToken = await (await db).V.findOneAndDelete(identifier_token);\n            if (!verificationToken) return null;\n            const { _id, ...rest } = verificationToken;\n            return rest;\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@auth+mongodb-adapter@2.6.0_mongodb@6.9.0_socks@2.8.3_/node_modules/@auth/mongodb-adapter/index.js\n");

/***/ })

};
;